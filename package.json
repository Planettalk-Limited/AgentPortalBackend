{
  "name": "agent-portal-backend",
  "version": "1.0.0",
  "description": "Agent Portal Backend API built with NestJS",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "typeorm-ts-node-commonjs",
    "db:create": "psql -U postgres -h localhost -c \"CREATE DATABASE agent_portal;\"",
    "db:drop": "psql -U postgres -h localhost -c \"DROP DATABASE IF EXISTS agent_portal;\"",
    "db:reset": "npm run db:drop && npm run db:create",
    "db:setup": "npm run db:create && npm run migration:run",
    "setup": "node scripts/setup-database.js",
    "docker:dev": "docker-compose --profile dev up -d",
    "docker:dev:down": "docker-compose --profile dev down",
    "docker:dev:logs": "docker-compose --profile dev logs -f",
    "docker:prod": "docker-compose --profile prod up -d",
    "docker:prod:down": "docker-compose --profile prod down",
    "docker:prod:logs": "docker-compose --profile prod logs -f",
    "docker:build": "docker build -t planettalk/agent-portal-backend:latest .",
    "docker:push": "docker push planettalk/agent-portal-backend:latest",
    "db:cleanup": "npx ts-node src/scripts/cleanup-simple.ts",
    "db:reset-for-testing": "npm run db:cleanup",
    "fix:total-earnings": "npx ts-node src/scripts/fix-total-earnings.ts",
    "seed": "node scripts/seed-database.js",
    "seed:rewards": "node scripts/seed-rewards.js",
    "seed:planettalk": "node scripts/seed-planettalk.js",
    "db:seed": "npm run seed",
    "migration:generate": "typeorm-ts-node-commonjs migration:generate -d src/config/typeorm.config.ts",
    "migration:run": "typeorm-ts-node-commonjs migration:run -d src/config/typeorm.config.ts",
    "migration:revert": "typeorm-ts-node-commonjs migration:revert -d src/config/typeorm.config.ts",
    "migration:create": "typeorm-ts-node-commonjs migration:create"
  },
  "dependencies": {
    "@nestjs/common": "^10.2.7",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.2.7",
    "@nestjs/jwt": "^10.1.1",
    "@nestjs/passport": "^10.0.2",
    "@nestjs/platform-express": "^10.2.7",
    "@nestjs/swagger": "^7.1.14",
    "@nestjs/typeorm": "^10.0.0",
    "@types/handlebars": "^4.0.40",
    "@types/nodemailer": "^7.0.1",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "form-data": "^4.0.1",
    "handlebars": "^4.7.8",
    "mailgun.js": "^9.4.1",
    "nodemailer": "^7.0.6",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.11.0",
    "qrcode": "^1.5.4",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "speakeasy": "^2.0.0",
    "typeorm": "^0.3.17",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.2.1",
    "@nestjs/schematics": "^10.0.3",
    "@nestjs/testing": "^10.2.7",
    "@types/bcryptjs": "^2.4.2",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/passport-jwt": "^3.0.9",
    "@types/passport-local": "^1.0.35",
    "@types/pg": "^8.10.2",
    "@types/qrcode": "^1.5.5",
    "@types/speakeasy": "^2.0.10",
    "@types/supertest": "^2.0.12",
    "@types/uuid": "^9.0.2",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
